
// ██████╗░██████╗░  ██████╗░██████╗░███████╗███████╗██╗██╗░░██╗  ░██████╗██╗░░░██╗███╗░░░███╗
// ╚════██╗██╔══██╗  ██╔══██╗██╔══██╗██╔════╝██╔════╝██║╚██╗██╔╝  ██╔════╝██║░░░██║████╗░████║
// ░░███╔═╝██║░░██║  ██████╔╝██████╔╝█████╗░░█████╗░░██║░╚███╔╝░  ╚█████╗░██║░░░██║██╔████╔██║
// ██╔══╝░░██║░░██║  ██╔═══╝░██╔══██╗██╔══╝░░██╔══╝░░██║░██╔██╗░  ░╚═══██╗██║░░░██║██║╚██╔╝██║
// ███████╗██████╔╝  ██║░░░░░██║░░██║███████╗██║░░░░░██║██╔╝╚██╗  ██████╔╝╚██████╔╝██║░╚═╝░██║
// ╚══════╝╚═════╝░  ╚═╝░░░░░╚═╝░░╚═╝╚══════╝╚═╝░░░░░╚═╝╚═╝░░╚═╝  ╚═════╝░░╚═════╝░╚═╝░░░░░╚═╝







void solve(){
   //2d 
    //taking inputs 
    int n ,m; 
    cin>>m>>n;
    vector<vector<int>> v(m,vector<int>(n));

for(int i =0;i<m;++i){
        for(int j=0;j<n;++j)
        {
            cin>>v[i][j];
        }
        
    }
    //creating prefix sum 



  
// ▒█▀▀█ ▒█▀▀█ ▒█▀▀▀ ░█▀▀█ ▀▀█▀▀ ▀█▀ ▒█▄░▒█ ▒█▀▀█ 　 █▀█ ▒█▀▀▄ 　 ▒█▀▀█ ▒█▀▀▀█ ▒█░▒█ ▒█▀▄▀█ 
// ▒█░░░ ▒█▄▄▀ ▒█▀▀▀ ▒█▄▄█ ░▒█░░ ▒█░ ▒█▒█▒█ ▒█░▄▄ 　 ░▄▀ ▒█░▒█ 　 ▒█▄▄█ ░▀▀▀▄▄ ▒█░▒█ ▒█▒█▒█ 
// ▒█▄▄█ ▒█░▒█ ▒█▄▄▄ ▒█░▒█ ░▒█░░ ▄█▄ ▒█░░▀█ ▒█▄▄█ 　 █▄▄ ▒█▄▄▀ 　 ▒█░░░ ▒█▄▄▄█ ░▀▄▄▀ ▒█░░▒█
    vector<vector<int>> p(m,vector<int>(n));
   
    
    for(int i=0;i<m;++i){
        for(int j=0;j<n;++j){
            p[i][j] = v[i][j];

            // Add value from the above row if exists
            if (i > 0) p[i][j] += p[i-1][j];

            // Add value from the left column if exists
            if (j > 0) p[i][j] += p[i][j-1];

            // Subtract the top-left diagonal overlap if both above row and left column exist
            if (i > 0 && j > 0) p[i][j] -= p[i-1][j-1]; 
        }
    }
    for(int i =0;i<m;++i){
        for(int j=0;j<n;++j)
        {
            cout<<p[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<"\nBetween L1,R1 to L2,r2 it will be :\n ";
    // q queries 
  ///////////////////////////////////////////////////////////////////////////////////////////////////
    int q ; 
    cin>> q;
      // █──█ █▀▀█ █───█ 　 ▀▀█▀▀ █▀▀█ 　 █──█ █▀▀ █▀▀ 　 █▀▀█ █▀▀█ █▀▀ █▀▀ ─▀─ █─█ 　 █▀▀ █──█ █▀▄▀█ 
      // █▀▀█ █──█ █▄█▄█ 　 ──█── █──█ 　 █──█ ▀▀█ █▀▀ 　 █──█ █▄▄▀ █▀▀ █▀▀ ▀█▀ ▄▀▄ 　 ▀▀█ █──█ █─▀─█ 
      // ▀──▀ ▀▀▀▀ ─▀─▀─ 　 ──▀── ▀▀▀▀ 　 ─▀▀▀ ▀▀▀ ▀▀▀ 　 █▀▀▀ ▀─▀▀ ▀▀▀ ▀── ▀▀▀ ▀─▀ 　 ▀▀▀ ─▀▀▀ ▀───▀
    while(q--)
    {
        int l1,r1,l2,r2;     
      

        cin>>l1>>r1>>l2>>r2;
        // lets say we want (1,2) to (2,3)

        cout<<p[2][3]-p[0][3]-p[2][1]+p[0][1];
    }
///////////////////////////////////////////////////////////////////////////////////////////////////////
}
 
// //test input s:
// 1
// 4 4 
// 1 2 3 4 
// 1 2 3 4 
// 5 6 7 8 
// 5 6 7 8 
// 1
// 1 2 2 3 
